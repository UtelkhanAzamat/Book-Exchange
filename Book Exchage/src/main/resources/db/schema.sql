-- drop table if exists AUTHOR_ cascade;
-- drop table if exists BOOK_ cascade;
-- drop table if exists BOOK_AUTHORS_ cascade;
-- drop table if exists BOOK_GENRES_ cascade;
-- drop table if exists GENRE_ cascade;
-- drop table if exists PERMISSION_ cascade;
-- drop table if exists ROLE_ cascade;
-- drop table if exists ROLE_PERMISSIONS_ cascade;
-- drop table if exists STATUS_ cascade;
-- drop table if exists USER_ cascade;

create table if not exists AUTHOR_ (
                         id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         firstName varchar(255),
                         lastName varchar(255)
);
create table if not exists BOOK_ (
                       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       isThisBookAvailableForExchange boolean,
                       rating float8,
                       title varchar(255),
                       owner_id int8
);
create table if not exists BOOK_AUTHORS_ (
                               book_id int8 not null,
                               author_id int8 not null,
                               primary key (book_id, author_id)
);

create table if not exists BOOK_GENRES_ (
                              book_id int8 not null,
                              genre_id int8 not null,
                              primary key (book_id, genre_id)
);

create table if not exists GENRE_ (
                        id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        genre varchar(255)
);
create table if not exists PERMISSION_ (
                             id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             permission varchar(255)
);
create table if not exists ROLE_ (
                       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       role varchar(255)
);
create table if not exists ROLE_PERMISSIONS_ (
                   role_id int8 not null,
                   permission_id int8 not null,
                   primary key (role_id, permission_id)
);

create table if not exists STATUS_ (
                         id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     status varchar(255)
);

create table if not exists USER_ (
                       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       email varchar(255),
                       firstName varchar(255),
                       lastName varchar(255),
                       password varchar(255),
                       userName varchar(255),
                       roleId int8,
                       statusId int8
);
alter table BOOK_
    add constraint owner_id
        foreign key (owner_id)
            references USER_ ON DELETE CASCADE;

alter table BOOK_AUTHORS_
    add constraint author_id
        foreign key (author_id)
            references AUTHOR_ ON DELETE CASCADE;

alter table BOOK_AUTHORS_
    add constraint book_id
        foreign key (book_id)
            references BOOK_ ON DELETE CASCADE;


alter table BOOK_GENRES_
    add constraint genre_id
        foreign key (genre_id)
            references GENRE_ ON DELETE CASCADE;

alter table BOOK_GENRES_
    add constraint book_id
        foreign key (book_id)
            references BOOK_ ON DELETE CASCADE;

alter table ROLE_PERMISSIONS_
    add constraint role_id
        foreign key (permission_id)
            references PERMISSION_ ON DELETE CASCADE;

alter table ROLE_PERMISSIONS_
    add constraint permission_id
        foreign key (role_id)
            references ROLE_ ON DELETE CASCADE;

alter table USER_
    add constraint role_id
        foreign key (roleId)
            references ROLE_ ON DELETE CASCADE;

alter table USER_
    add constraint status_id
        foreign key (statusId)
            references STATUS_ ON DELETE CASCADE;